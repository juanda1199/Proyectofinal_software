// Generated by delombok at Fri Aug 26 19:04:59 CDT 2022
package com.mercadopago.net;

import com.google.gson.JsonObject;
import com.mercadopago.core.MPRequestOptions;
import java.util.Map;
import java.util.Objects;
import java.util.UUID;

/**
 * MPRequest class.
 */
public class MPRequest {
  private final String uri;
  private final HttpMethod method;
  private final Map<String, String> headers;
  private final JsonObject payload;
  private final Map<String, Object> queryParams;
  private final String accessToken;
  private final int connectionTimeout;
  private final int connectionRequestTimeout;
  private final int socketTimeout;

  /**
   * Method responsible for build MP request.
   *
   * @param path path
   * @param method method
   * @param payload payload
   * @param queryParams queryParams
   * @param requestOptions requestOptions
   * @return MPRequest
   */
  public static MPRequest buildRequest(String path, HttpMethod method, JsonObject payload, Map<String, Object> queryParams, MPRequestOptions requestOptions) {
    MPRequest mpRequest;
    if (Objects.nonNull(requestOptions)) {
      mpRequest = MPRequest.builder().uri(path).method(method).headers(requestOptions.getCustomHeaders()).payload(payload).queryParams(queryParams).accessToken(requestOptions.getAccessToken()).connectionRequestTimeout(requestOptions.getConnectionRequestTimeout()).connectionTimeout(requestOptions.getConnectionTimeout()).socketTimeout(requestOptions.getSocketTimeout()).build();
    } else {
      mpRequest = MPRequest.builder().uri(path).method(method).payload(payload).build();
    }
    return mpRequest;
  }

  /**
   * Method responsible for create a new Idempotency key.
   *
   * @return Idempotency key
   */
  public String createIdempotencyKey() {
    return UUID.randomUUID().toString();
  }

  @java.lang.SuppressWarnings("all")
  MPRequest(final String uri, final HttpMethod method, final Map<String, String> headers, final JsonObject payload, final Map<String, Object> queryParams, final String accessToken, final int connectionTimeout, final int connectionRequestTimeout, final int socketTimeout) {
    this.uri = uri;
    this.method = method;
    this.headers = headers;
    this.payload = payload;
    this.queryParams = queryParams;
    this.accessToken = accessToken;
    this.connectionTimeout = connectionTimeout;
    this.connectionRequestTimeout = connectionRequestTimeout;
    this.socketTimeout = socketTimeout;
  }


  @java.lang.SuppressWarnings("all")
  public static class MPRequestBuilder {
    @java.lang.SuppressWarnings("all")
    private String uri;
    @java.lang.SuppressWarnings("all")
    private HttpMethod method;
    @java.lang.SuppressWarnings("all")
    private Map<String, String> headers;
    @java.lang.SuppressWarnings("all")
    private JsonObject payload;
    @java.lang.SuppressWarnings("all")
    private Map<String, Object> queryParams;
    @java.lang.SuppressWarnings("all")
    private String accessToken;
    @java.lang.SuppressWarnings("all")
    private int connectionTimeout;
    @java.lang.SuppressWarnings("all")
    private int connectionRequestTimeout;
    @java.lang.SuppressWarnings("all")
    private int socketTimeout;

    @java.lang.SuppressWarnings("all")
    MPRequestBuilder() {
    }

    /**
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    public MPRequest.MPRequestBuilder uri(final String uri) {
      this.uri = uri;
      return this;
    }

    /**
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    public MPRequest.MPRequestBuilder method(final HttpMethod method) {
      this.method = method;
      return this;
    }

    /**
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    public MPRequest.MPRequestBuilder headers(final Map<String, String> headers) {
      this.headers = headers;
      return this;
    }

    /**
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    public MPRequest.MPRequestBuilder payload(final JsonObject payload) {
      this.payload = payload;
      return this;
    }

    /**
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    public MPRequest.MPRequestBuilder queryParams(final Map<String, Object> queryParams) {
      this.queryParams = queryParams;
      return this;
    }

    /**
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    public MPRequest.MPRequestBuilder accessToken(final String accessToken) {
      this.accessToken = accessToken;
      return this;
    }

    /**
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    public MPRequest.MPRequestBuilder connectionTimeout(final int connectionTimeout) {
      this.connectionTimeout = connectionTimeout;
      return this;
    }

    /**
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    public MPRequest.MPRequestBuilder connectionRequestTimeout(final int connectionRequestTimeout) {
      this.connectionRequestTimeout = connectionRequestTimeout;
      return this;
    }

    /**
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    public MPRequest.MPRequestBuilder socketTimeout(final int socketTimeout) {
      this.socketTimeout = socketTimeout;
      return this;
    }

    @java.lang.SuppressWarnings("all")
    public MPRequest build() {
      return new MPRequest(this.uri, this.method, this.headers, this.payload, this.queryParams, this.accessToken, this.connectionTimeout, this.connectionRequestTimeout, this.socketTimeout);
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public java.lang.String toString() {
      return "MPRequest.MPRequestBuilder(uri=" + this.uri + ", method=" + this.method + ", headers=" + this.headers + ", payload=" + this.payload + ", queryParams=" + this.queryParams + ", accessToken=" + this.accessToken + ", connectionTimeout=" + this.connectionTimeout + ", connectionRequestTimeout=" + this.connectionRequestTimeout + ", socketTimeout=" + this.socketTimeout + ")";
    }
  }

  @java.lang.SuppressWarnings("all")
  public static MPRequest.MPRequestBuilder builder() {
    return new MPRequest.MPRequestBuilder();
  }

  @java.lang.SuppressWarnings("all")
  public String getUri() {
    return this.uri;
  }

  @java.lang.SuppressWarnings("all")
  public HttpMethod getMethod() {
    return this.method;
  }

  @java.lang.SuppressWarnings("all")
  public Map<String, String> getHeaders() {
    return this.headers;
  }

  @java.lang.SuppressWarnings("all")
  public JsonObject getPayload() {
    return this.payload;
  }

  @java.lang.SuppressWarnings("all")
  public Map<String, Object> getQueryParams() {
    return this.queryParams;
  }

  @java.lang.SuppressWarnings("all")
  public String getAccessToken() {
    return this.accessToken;
  }

  @java.lang.SuppressWarnings("all")
  public int getConnectionTimeout() {
    return this.connectionTimeout;
  }

  @java.lang.SuppressWarnings("all")
  public int getConnectionRequestTimeout() {
    return this.connectionRequestTimeout;
  }

  @java.lang.SuppressWarnings("all")
  public int getSocketTimeout() {
    return this.socketTimeout;
  }
}
