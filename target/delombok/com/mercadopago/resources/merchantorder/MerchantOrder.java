// Generated by delombok at Fri Aug 26 19:04:59 CDT 2022
package com.mercadopago.resources.merchantorder;

import com.mercadopago.net.MPResource;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.List;

/**
 * Merchant Order resource.
 */
public class MerchantOrder extends MPResource {
  /**
   * Order ID.
   */
  private Long id;
  /**
   * Payment preference identifier associated to the merchant order.
   */
  private String preferenceId;
  /**
   * Application ID.
   */
  private String applicationId;
  /**
   * Show the current merchant order state.
   */
  private String status;
  /**
   * Country identifier that merchant order belongs to.
   */
  private String siteId;
  /**
   * Payer information.
   */
  private MerchantOrderPayer payer;
  /**
   * Seller information.
   */
  private MerchantOrderCollector collector;
  /**
   * Sponsor ID.
   */
  private String sponsorId;
  /**
   * Payments information.
   */
  private List<MerchantOrderPayment> payments;
  /**
   * Amount paid in this order.
   */
  private BigDecimal paidAmount;
  /**
   * Amount refunded in this Order.
   */
  private BigDecimal refundedAmount;
  /**
   * Shipping fee.
   */
  private BigDecimal shippingCost;
  /**
   * Date of creation.
   */
  private OffsetDateTime dateCreated;
  /**
   * If the Order is expired (true) or not (false).
   */
  private boolean cancelled;
  /**
   * Items information.
   */
  private List<MerchantOrderItem> items;
  /**
   * Shipments information.
   */
  private List<MerchantOrderShipment> shipments;
  /**
   * URL where you'd like to receive a payment notification.
   */
  private String notificationUrl;
  /**
   * Additional information.
   */
  private String additionalInfo;
  /**
   * Reference you can synchronize with your payment system.
   */
  private String externalReference;
  /**
   * Origin of the payment.
   */
  private String marketplace;
  /**
   * Total amount of the order.
   */
  private BigDecimal totalAmount;
  /**
   * Current merchant order status given the payments status.
   */
  private String orderStatus;
  /**
   * Last modified date.
   */
  private OffsetDateTime lastUpdated;

  /**
   * Order ID.
   */
  @java.lang.SuppressWarnings("all")
  public Long getId() {
    return this.id;
  }

  /**
   * Payment preference identifier associated to the merchant order.
   */
  @java.lang.SuppressWarnings("all")
  public String getPreferenceId() {
    return this.preferenceId;
  }

  /**
   * Application ID.
   */
  @java.lang.SuppressWarnings("all")
  public String getApplicationId() {
    return this.applicationId;
  }

  /**
   * Show the current merchant order state.
   */
  @java.lang.SuppressWarnings("all")
  public String getStatus() {
    return this.status;
  }

  /**
   * Country identifier that merchant order belongs to.
   */
  @java.lang.SuppressWarnings("all")
  public String getSiteId() {
    return this.siteId;
  }

  /**
   * Payer information.
   */
  @java.lang.SuppressWarnings("all")
  public MerchantOrderPayer getPayer() {
    return this.payer;
  }

  /**
   * Seller information.
   */
  @java.lang.SuppressWarnings("all")
  public MerchantOrderCollector getCollector() {
    return this.collector;
  }

  /**
   * Sponsor ID.
   */
  @java.lang.SuppressWarnings("all")
  public String getSponsorId() {
    return this.sponsorId;
  }

  /**
   * Payments information.
   */
  @java.lang.SuppressWarnings("all")
  public List<MerchantOrderPayment> getPayments() {
    return this.payments;
  }

  /**
   * Amount paid in this order.
   */
  @java.lang.SuppressWarnings("all")
  public BigDecimal getPaidAmount() {
    return this.paidAmount;
  }

  /**
   * Amount refunded in this Order.
   */
  @java.lang.SuppressWarnings("all")
  public BigDecimal getRefundedAmount() {
    return this.refundedAmount;
  }

  /**
   * Shipping fee.
   */
  @java.lang.SuppressWarnings("all")
  public BigDecimal getShippingCost() {
    return this.shippingCost;
  }

  /**
   * Date of creation.
   */
  @java.lang.SuppressWarnings("all")
  public OffsetDateTime getDateCreated() {
    return this.dateCreated;
  }

  /**
   * If the Order is expired (true) or not (false).
   */
  @java.lang.SuppressWarnings("all")
  public boolean isCancelled() {
    return this.cancelled;
  }

  /**
   * Items information.
   */
  @java.lang.SuppressWarnings("all")
  public List<MerchantOrderItem> getItems() {
    return this.items;
  }

  /**
   * Shipments information.
   */
  @java.lang.SuppressWarnings("all")
  public List<MerchantOrderShipment> getShipments() {
    return this.shipments;
  }

  /**
   * URL where you'd like to receive a payment notification.
   */
  @java.lang.SuppressWarnings("all")
  public String getNotificationUrl() {
    return this.notificationUrl;
  }

  /**
   * Additional information.
   */
  @java.lang.SuppressWarnings("all")
  public String getAdditionalInfo() {
    return this.additionalInfo;
  }

  /**
   * Reference you can synchronize with your payment system.
   */
  @java.lang.SuppressWarnings("all")
  public String getExternalReference() {
    return this.externalReference;
  }

  /**
   * Origin of the payment.
   */
  @java.lang.SuppressWarnings("all")
  public String getMarketplace() {
    return this.marketplace;
  }

  /**
   * Total amount of the order.
   */
  @java.lang.SuppressWarnings("all")
  public BigDecimal getTotalAmount() {
    return this.totalAmount;
  }

  /**
   * Current merchant order status given the payments status.
   */
  @java.lang.SuppressWarnings("all")
  public String getOrderStatus() {
    return this.orderStatus;
  }

  /**
   * Last modified date.
   */
  @java.lang.SuppressWarnings("all")
  public OffsetDateTime getLastUpdated() {
    return this.lastUpdated;
  }
}
