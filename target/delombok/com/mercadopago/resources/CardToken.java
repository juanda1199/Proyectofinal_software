// Generated by delombok at Fri Aug 26 19:04:59 CDT 2022
package com.mercadopago.resources;

import com.mercadopago.net.MPResource;
import com.mercadopago.resources.customer.CustomerCardCardholder;
import java.time.OffsetDateTime;

/**
 * Send customer card data to Mercado Pago server and receive a token to complete the payments
 * transactions. For testing only. .
 */
public class CardToken extends MPResource {
  /**
   * Card token.
   */
  private String id;
  /**
   * Card id.
   */
  private String cardId;
  /**
   * First six digits of card number.
   */
  private String firstSixDigits;
  /**
   * Expiration month of the card.
   */
  private Integer expirationMonth;
  /**
   * Expiration year of the card.
   */
  private Integer expirationYear;
  /**
   * Last four digits of the card.
   */
  private String lastFourDigits;
  /**
   * Cardholder information.
   */
  private CustomerCardCardholder cardholder;
  /**
   * Current status of card. E.g. active.
   */
  private String status;
  /**
   * Date token was created.
   */
  private OffsetDateTime dateCreated;
  /**
   * Date token was last updated.
   */
  private OffsetDateTime dateLastUpdated;
  /**
   * Date token expires.
   */
  private OffsetDateTime dateDue;
  /**
   * Flag indicating if Luhn validation is used.
   */
  private Boolean luhnValidation;
  /**
   * Flag indicating if this is a production card token.
   */
  private Boolean liveMode;
  /**
   * Require esc.
   */
  private Boolean requireEsc;
  /**
   * Security code of the card.
   */
  private Integer cardNumberLength;
  /**
   * Security code of the card.
   */
  private Integer securityCodeLength;

  /**
   * Card token.
   */
  @java.lang.SuppressWarnings("all")
  public String getId() {
    return this.id;
  }

  /**
   * Card id.
   */
  @java.lang.SuppressWarnings("all")
  public String getCardId() {
    return this.cardId;
  }

  /**
   * First six digits of card number.
   */
  @java.lang.SuppressWarnings("all")
  public String getFirstSixDigits() {
    return this.firstSixDigits;
  }

  /**
   * Expiration month of the card.
   */
  @java.lang.SuppressWarnings("all")
  public Integer getExpirationMonth() {
    return this.expirationMonth;
  }

  /**
   * Expiration year of the card.
   */
  @java.lang.SuppressWarnings("all")
  public Integer getExpirationYear() {
    return this.expirationYear;
  }

  /**
   * Last four digits of the card.
   */
  @java.lang.SuppressWarnings("all")
  public String getLastFourDigits() {
    return this.lastFourDigits;
  }

  /**
   * Cardholder information.
   */
  @java.lang.SuppressWarnings("all")
  public CustomerCardCardholder getCardholder() {
    return this.cardholder;
  }

  /**
   * Current status of card. E.g. active.
   */
  @java.lang.SuppressWarnings("all")
  public String getStatus() {
    return this.status;
  }

  /**
   * Date token was created.
   */
  @java.lang.SuppressWarnings("all")
  public OffsetDateTime getDateCreated() {
    return this.dateCreated;
  }

  /**
   * Date token was last updated.
   */
  @java.lang.SuppressWarnings("all")
  public OffsetDateTime getDateLastUpdated() {
    return this.dateLastUpdated;
  }

  /**
   * Date token expires.
   */
  @java.lang.SuppressWarnings("all")
  public OffsetDateTime getDateDue() {
    return this.dateDue;
  }

  /**
   * Flag indicating if Luhn validation is used.
   */
  @java.lang.SuppressWarnings("all")
  public Boolean getLuhnValidation() {
    return this.luhnValidation;
  }

  /**
   * Flag indicating if this is a production card token.
   */
  @java.lang.SuppressWarnings("all")
  public Boolean getLiveMode() {
    return this.liveMode;
  }

  /**
   * Require esc.
   */
  @java.lang.SuppressWarnings("all")
  public Boolean getRequireEsc() {
    return this.requireEsc;
  }

  /**
   * Security code of the card.
   */
  @java.lang.SuppressWarnings("all")
  public Integer getCardNumberLength() {
    return this.cardNumberLength;
  }

  /**
   * Security code of the card.
   */
  @java.lang.SuppressWarnings("all")
  public Integer getSecurityCodeLength() {
    return this.securityCodeLength;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  public boolean equals(final java.lang.Object o) {
    if (o == this) return true;
    if (!(o instanceof CardToken)) return false;
    final CardToken other = (CardToken) o;
    if (!other.canEqual((java.lang.Object) this)) return false;
    if (!super.equals(o)) return false;
    final java.lang.Object this$expirationMonth = this.getExpirationMonth();
    final java.lang.Object other$expirationMonth = other.getExpirationMonth();
    if (this$expirationMonth == null ? other$expirationMonth != null : !this$expirationMonth.equals(other$expirationMonth)) return false;
    final java.lang.Object this$expirationYear = this.getExpirationYear();
    final java.lang.Object other$expirationYear = other.getExpirationYear();
    if (this$expirationYear == null ? other$expirationYear != null : !this$expirationYear.equals(other$expirationYear)) return false;
    final java.lang.Object this$luhnValidation = this.getLuhnValidation();
    final java.lang.Object other$luhnValidation = other.getLuhnValidation();
    if (this$luhnValidation == null ? other$luhnValidation != null : !this$luhnValidation.equals(other$luhnValidation)) return false;
    final java.lang.Object this$liveMode = this.getLiveMode();
    final java.lang.Object other$liveMode = other.getLiveMode();
    if (this$liveMode == null ? other$liveMode != null : !this$liveMode.equals(other$liveMode)) return false;
    final java.lang.Object this$requireEsc = this.getRequireEsc();
    final java.lang.Object other$requireEsc = other.getRequireEsc();
    if (this$requireEsc == null ? other$requireEsc != null : !this$requireEsc.equals(other$requireEsc)) return false;
    final java.lang.Object this$cardNumberLength = this.getCardNumberLength();
    final java.lang.Object other$cardNumberLength = other.getCardNumberLength();
    if (this$cardNumberLength == null ? other$cardNumberLength != null : !this$cardNumberLength.equals(other$cardNumberLength)) return false;
    final java.lang.Object this$securityCodeLength = this.getSecurityCodeLength();
    final java.lang.Object other$securityCodeLength = other.getSecurityCodeLength();
    if (this$securityCodeLength == null ? other$securityCodeLength != null : !this$securityCodeLength.equals(other$securityCodeLength)) return false;
    final java.lang.Object this$id = this.getId();
    final java.lang.Object other$id = other.getId();
    if (this$id == null ? other$id != null : !this$id.equals(other$id)) return false;
    final java.lang.Object this$cardId = this.getCardId();
    final java.lang.Object other$cardId = other.getCardId();
    if (this$cardId == null ? other$cardId != null : !this$cardId.equals(other$cardId)) return false;
    final java.lang.Object this$firstSixDigits = this.getFirstSixDigits();
    final java.lang.Object other$firstSixDigits = other.getFirstSixDigits();
    if (this$firstSixDigits == null ? other$firstSixDigits != null : !this$firstSixDigits.equals(other$firstSixDigits)) return false;
    final java.lang.Object this$lastFourDigits = this.getLastFourDigits();
    final java.lang.Object other$lastFourDigits = other.getLastFourDigits();
    if (this$lastFourDigits == null ? other$lastFourDigits != null : !this$lastFourDigits.equals(other$lastFourDigits)) return false;
    final java.lang.Object this$cardholder = this.getCardholder();
    final java.lang.Object other$cardholder = other.getCardholder();
    if (this$cardholder == null ? other$cardholder != null : !this$cardholder.equals(other$cardholder)) return false;
    final java.lang.Object this$status = this.getStatus();
    final java.lang.Object other$status = other.getStatus();
    if (this$status == null ? other$status != null : !this$status.equals(other$status)) return false;
    final java.lang.Object this$dateCreated = this.getDateCreated();
    final java.lang.Object other$dateCreated = other.getDateCreated();
    if (this$dateCreated == null ? other$dateCreated != null : !this$dateCreated.equals(other$dateCreated)) return false;
    final java.lang.Object this$dateLastUpdated = this.getDateLastUpdated();
    final java.lang.Object other$dateLastUpdated = other.getDateLastUpdated();
    if (this$dateLastUpdated == null ? other$dateLastUpdated != null : !this$dateLastUpdated.equals(other$dateLastUpdated)) return false;
    final java.lang.Object this$dateDue = this.getDateDue();
    final java.lang.Object other$dateDue = other.getDateDue();
    if (this$dateDue == null ? other$dateDue != null : !this$dateDue.equals(other$dateDue)) return false;
    return true;
  }

  @java.lang.SuppressWarnings("all")
  protected boolean canEqual(final java.lang.Object other) {
    return other instanceof CardToken;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  public int hashCode() {
    final int PRIME = 59;
    int result = super.hashCode();
    final java.lang.Object $expirationMonth = this.getExpirationMonth();
    result = result * PRIME + ($expirationMonth == null ? 43 : $expirationMonth.hashCode());
    final java.lang.Object $expirationYear = this.getExpirationYear();
    result = result * PRIME + ($expirationYear == null ? 43 : $expirationYear.hashCode());
    final java.lang.Object $luhnValidation = this.getLuhnValidation();
    result = result * PRIME + ($luhnValidation == null ? 43 : $luhnValidation.hashCode());
    final java.lang.Object $liveMode = this.getLiveMode();
    result = result * PRIME + ($liveMode == null ? 43 : $liveMode.hashCode());
    final java.lang.Object $requireEsc = this.getRequireEsc();
    result = result * PRIME + ($requireEsc == null ? 43 : $requireEsc.hashCode());
    final java.lang.Object $cardNumberLength = this.getCardNumberLength();
    result = result * PRIME + ($cardNumberLength == null ? 43 : $cardNumberLength.hashCode());
    final java.lang.Object $securityCodeLength = this.getSecurityCodeLength();
    result = result * PRIME + ($securityCodeLength == null ? 43 : $securityCodeLength.hashCode());
    final java.lang.Object $id = this.getId();
    result = result * PRIME + ($id == null ? 43 : $id.hashCode());
    final java.lang.Object $cardId = this.getCardId();
    result = result * PRIME + ($cardId == null ? 43 : $cardId.hashCode());
    final java.lang.Object $firstSixDigits = this.getFirstSixDigits();
    result = result * PRIME + ($firstSixDigits == null ? 43 : $firstSixDigits.hashCode());
    final java.lang.Object $lastFourDigits = this.getLastFourDigits();
    result = result * PRIME + ($lastFourDigits == null ? 43 : $lastFourDigits.hashCode());
    final java.lang.Object $cardholder = this.getCardholder();
    result = result * PRIME + ($cardholder == null ? 43 : $cardholder.hashCode());
    final java.lang.Object $status = this.getStatus();
    result = result * PRIME + ($status == null ? 43 : $status.hashCode());
    final java.lang.Object $dateCreated = this.getDateCreated();
    result = result * PRIME + ($dateCreated == null ? 43 : $dateCreated.hashCode());
    final java.lang.Object $dateLastUpdated = this.getDateLastUpdated();
    result = result * PRIME + ($dateLastUpdated == null ? 43 : $dateLastUpdated.hashCode());
    final java.lang.Object $dateDue = this.getDateDue();
    result = result * PRIME + ($dateDue == null ? 43 : $dateDue.hashCode());
    return result;
  }
}
