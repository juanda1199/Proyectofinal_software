// Generated by delombok at Fri Aug 26 19:04:59 CDT 2022
package com.mercadopago.client.oauth;

/**
 * Credential information to perform a refresh credential request. Go to <a
 * href="https://www.mercadopago.com.br/developers/en/guides/security/oauth">this page</a> to learn
 * more.
 */
public class RefreshOauthCredentialRequest {
  /**
   * Type of operation to perform to get your credentials. This is a fixed parameter with a
   * refresh_token value.
   */
  private final String grantType = "refresh_token";
  /**
   * Private key to be used in some plugins to generate payments. You can get it in Your
   * credentials.
   */
  private final String clientSecret;
  /**
   * Unique ID that identifies your integration. You can get it in your Mercado Pago credentials.
   */
  private final String clientId;
  /**
   * Value received with your seller's data.
   */
  private final String refreshToken;

  @java.lang.SuppressWarnings("all")
  RefreshOauthCredentialRequest(final String clientSecret, final String clientId, final String refreshToken) {
    this.clientSecret = clientSecret;
    this.clientId = clientId;
    this.refreshToken = refreshToken;
  }


  @java.lang.SuppressWarnings("all")
  public static class RefreshOauthCredentialRequestBuilder {
    @java.lang.SuppressWarnings("all")
    private String clientSecret;
    @java.lang.SuppressWarnings("all")
    private String clientId;
    @java.lang.SuppressWarnings("all")
    private String refreshToken;

    @java.lang.SuppressWarnings("all")
    RefreshOauthCredentialRequestBuilder() {
    }

    /**
     * Private key to be used in some plugins to generate payments. You can get it in Your
     * credentials.
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    public RefreshOauthCredentialRequest.RefreshOauthCredentialRequestBuilder clientSecret(final String clientSecret) {
      this.clientSecret = clientSecret;
      return this;
    }

    /**
     * Unique ID that identifies your integration. You can get it in your Mercado Pago credentials.
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    public RefreshOauthCredentialRequest.RefreshOauthCredentialRequestBuilder clientId(final String clientId) {
      this.clientId = clientId;
      return this;
    }

    /**
     * Value received with your seller's data.
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    public RefreshOauthCredentialRequest.RefreshOauthCredentialRequestBuilder refreshToken(final String refreshToken) {
      this.refreshToken = refreshToken;
      return this;
    }

    @java.lang.SuppressWarnings("all")
    public RefreshOauthCredentialRequest build() {
      return new RefreshOauthCredentialRequest(this.clientSecret, this.clientId, this.refreshToken);
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public java.lang.String toString() {
      return "RefreshOauthCredentialRequest.RefreshOauthCredentialRequestBuilder(clientSecret=" + this.clientSecret + ", clientId=" + this.clientId + ", refreshToken=" + this.refreshToken + ")";
    }
  }

  @java.lang.SuppressWarnings("all")
  public static RefreshOauthCredentialRequest.RefreshOauthCredentialRequestBuilder builder() {
    return new RefreshOauthCredentialRequest.RefreshOauthCredentialRequestBuilder();
  }

  /**
   * Type of operation to perform to get your credentials. This is a fixed parameter with a
   * refresh_token value.
   */
  @java.lang.SuppressWarnings("all")
  public String getGrantType() {
    return this.grantType;
  }

  /**
   * Private key to be used in some plugins to generate payments. You can get it in Your
   * credentials.
   */
  @java.lang.SuppressWarnings("all")
  public String getClientSecret() {
    return this.clientSecret;
  }

  /**
   * Unique ID that identifies your integration. You can get it in your Mercado Pago credentials.
   */
  @java.lang.SuppressWarnings("all")
  public String getClientId() {
    return this.clientId;
  }

  /**
   * Value received with your seller's data.
   */
  @java.lang.SuppressWarnings("all")
  public String getRefreshToken() {
    return this.refreshToken;
  }
}
