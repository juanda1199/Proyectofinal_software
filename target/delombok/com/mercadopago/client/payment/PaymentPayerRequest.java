// Generated by delombok at Fri Aug 26 19:04:59 CDT 2022
package com.mercadopago.client.payment;

import com.mercadopago.client.common.IdentificationRequest;

/**
 * PaymentPayerRequest class.
 */
public class PaymentPayerRequest {
  /**
   * Payer's identification type (mandatory if the payer is a Customer).
   */
  private final String type;
  /**
   * Payer's ID.
   */
  private final String id;
  /**
   * Email of the payer.
   */
  private final String email;
  /**
   * Payer's personal identification.
   */
  private final IdentificationRequest identification;
  /**
   * Payer's first name.
   */
  private final String firstName;
  /**
   * Payer's last name.
   */
  private final String lastName;
  /**
   * Payer's entity type (only for bank transfers).
   */
  private final String entityType;

  @java.lang.SuppressWarnings("all")
  PaymentPayerRequest(final String type, final String id, final String email, final IdentificationRequest identification, final String firstName, final String lastName, final String entityType) {
    this.type = type;
    this.id = id;
    this.email = email;
    this.identification = identification;
    this.firstName = firstName;
    this.lastName = lastName;
    this.entityType = entityType;
  }


  @java.lang.SuppressWarnings("all")
  public static class PaymentPayerRequestBuilder {
    @java.lang.SuppressWarnings("all")
    private String type;
    @java.lang.SuppressWarnings("all")
    private String id;
    @java.lang.SuppressWarnings("all")
    private String email;
    @java.lang.SuppressWarnings("all")
    private IdentificationRequest identification;
    @java.lang.SuppressWarnings("all")
    private String firstName;
    @java.lang.SuppressWarnings("all")
    private String lastName;
    @java.lang.SuppressWarnings("all")
    private String entityType;

    @java.lang.SuppressWarnings("all")
    PaymentPayerRequestBuilder() {
    }

    /**
     * Payer's identification type (mandatory if the payer is a Customer).
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    public PaymentPayerRequest.PaymentPayerRequestBuilder type(final String type) {
      this.type = type;
      return this;
    }

    /**
     * Payer's ID.
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    public PaymentPayerRequest.PaymentPayerRequestBuilder id(final String id) {
      this.id = id;
      return this;
    }

    /**
     * Email of the payer.
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    public PaymentPayerRequest.PaymentPayerRequestBuilder email(final String email) {
      this.email = email;
      return this;
    }

    /**
     * Payer's personal identification.
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    public PaymentPayerRequest.PaymentPayerRequestBuilder identification(final IdentificationRequest identification) {
      this.identification = identification;
      return this;
    }

    /**
     * Payer's first name.
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    public PaymentPayerRequest.PaymentPayerRequestBuilder firstName(final String firstName) {
      this.firstName = firstName;
      return this;
    }

    /**
     * Payer's last name.
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    public PaymentPayerRequest.PaymentPayerRequestBuilder lastName(final String lastName) {
      this.lastName = lastName;
      return this;
    }

    /**
     * Payer's entity type (only for bank transfers).
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    public PaymentPayerRequest.PaymentPayerRequestBuilder entityType(final String entityType) {
      this.entityType = entityType;
      return this;
    }

    @java.lang.SuppressWarnings("all")
    public PaymentPayerRequest build() {
      return new PaymentPayerRequest(this.type, this.id, this.email, this.identification, this.firstName, this.lastName, this.entityType);
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public java.lang.String toString() {
      return "PaymentPayerRequest.PaymentPayerRequestBuilder(type=" + this.type + ", id=" + this.id + ", email=" + this.email + ", identification=" + this.identification + ", firstName=" + this.firstName + ", lastName=" + this.lastName + ", entityType=" + this.entityType + ")";
    }
  }

  @java.lang.SuppressWarnings("all")
  public static PaymentPayerRequest.PaymentPayerRequestBuilder builder() {
    return new PaymentPayerRequest.PaymentPayerRequestBuilder();
  }

  /**
   * Payer's identification type (mandatory if the payer is a Customer).
   */
  @java.lang.SuppressWarnings("all")
  public String getType() {
    return this.type;
  }

  /**
   * Payer's ID.
   */
  @java.lang.SuppressWarnings("all")
  public String getId() {
    return this.id;
  }

  /**
   * Email of the payer.
   */
  @java.lang.SuppressWarnings("all")
  public String getEmail() {
    return this.email;
  }

  /**
   * Payer's personal identification.
   */
  @java.lang.SuppressWarnings("all")
  public IdentificationRequest getIdentification() {
    return this.identification;
  }

  /**
   * Payer's first name.
   */
  @java.lang.SuppressWarnings("all")
  public String getFirstName() {
    return this.firstName;
  }

  /**
   * Payer's last name.
   */
  @java.lang.SuppressWarnings("all")
  public String getLastName() {
    return this.lastName;
  }

  /**
   * Payer's entity type (only for bank transfers).
   */
  @java.lang.SuppressWarnings("all")
  public String getEntityType() {
    return this.entityType;
  }
}
