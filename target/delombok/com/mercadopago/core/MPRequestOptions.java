// Generated by delombok at Fri Aug 26 19:04:59 CDT 2022
package com.mercadopago.core;

import java.util.Map;

/**
 * MPRequestOptions class.
 */
public class MPRequestOptions {
  private String accessToken;
  private int connectionTimeout;
  private int connectionRequestTimeout;
  private int socketTimeout;
  private Map<String, String> customHeaders;

  /**
   * Create default MPRequestOptions.
   *
   * @return MPRequestOptions
   */
  public static MPRequestOptions createDefault() {
    return MPRequestOptions.builder().build();
  }

  @java.lang.SuppressWarnings("all")
  MPRequestOptions(final String accessToken, final int connectionTimeout, final int connectionRequestTimeout, final int socketTimeout, final Map<String, String> customHeaders) {
    this.accessToken = accessToken;
    this.connectionTimeout = connectionTimeout;
    this.connectionRequestTimeout = connectionRequestTimeout;
    this.socketTimeout = socketTimeout;
    this.customHeaders = customHeaders;
  }


  @java.lang.SuppressWarnings("all")
  public static class MPRequestOptionsBuilder {
    @java.lang.SuppressWarnings("all")
    private String accessToken;
    @java.lang.SuppressWarnings("all")
    private int connectionTimeout;
    @java.lang.SuppressWarnings("all")
    private int connectionRequestTimeout;
    @java.lang.SuppressWarnings("all")
    private int socketTimeout;
    @java.lang.SuppressWarnings("all")
    private Map<String, String> customHeaders;

    @java.lang.SuppressWarnings("all")
    MPRequestOptionsBuilder() {
    }

    /**
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    public MPRequestOptions.MPRequestOptionsBuilder accessToken(final String accessToken) {
      this.accessToken = accessToken;
      return this;
    }

    /**
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    public MPRequestOptions.MPRequestOptionsBuilder connectionTimeout(final int connectionTimeout) {
      this.connectionTimeout = connectionTimeout;
      return this;
    }

    /**
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    public MPRequestOptions.MPRequestOptionsBuilder connectionRequestTimeout(final int connectionRequestTimeout) {
      this.connectionRequestTimeout = connectionRequestTimeout;
      return this;
    }

    /**
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    public MPRequestOptions.MPRequestOptionsBuilder socketTimeout(final int socketTimeout) {
      this.socketTimeout = socketTimeout;
      return this;
    }

    /**
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    public MPRequestOptions.MPRequestOptionsBuilder customHeaders(final Map<String, String> customHeaders) {
      this.customHeaders = customHeaders;
      return this;
    }

    @java.lang.SuppressWarnings("all")
    public MPRequestOptions build() {
      return new MPRequestOptions(this.accessToken, this.connectionTimeout, this.connectionRequestTimeout, this.socketTimeout, this.customHeaders);
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public java.lang.String toString() {
      return "MPRequestOptions.MPRequestOptionsBuilder(accessToken=" + this.accessToken + ", connectionTimeout=" + this.connectionTimeout + ", connectionRequestTimeout=" + this.connectionRequestTimeout + ", socketTimeout=" + this.socketTimeout + ", customHeaders=" + this.customHeaders + ")";
    }
  }

  @java.lang.SuppressWarnings("all")
  public static MPRequestOptions.MPRequestOptionsBuilder builder() {
    return new MPRequestOptions.MPRequestOptionsBuilder();
  }

  @java.lang.SuppressWarnings("all")
  public String getAccessToken() {
    return this.accessToken;
  }

  @java.lang.SuppressWarnings("all")
  public int getConnectionTimeout() {
    return this.connectionTimeout;
  }

  @java.lang.SuppressWarnings("all")
  public int getConnectionRequestTimeout() {
    return this.connectionRequestTimeout;
  }

  @java.lang.SuppressWarnings("all")
  public int getSocketTimeout() {
    return this.socketTimeout;
  }

  @java.lang.SuppressWarnings("all")
  public Map<String, String> getCustomHeaders() {
    return this.customHeaders;
  }

  @java.lang.SuppressWarnings("all")
  public void setAccessToken(final String accessToken) {
    this.accessToken = accessToken;
  }

  @java.lang.SuppressWarnings("all")
  public void setConnectionTimeout(final int connectionTimeout) {
    this.connectionTimeout = connectionTimeout;
  }

  @java.lang.SuppressWarnings("all")
  public void setConnectionRequestTimeout(final int connectionRequestTimeout) {
    this.connectionRequestTimeout = connectionRequestTimeout;
  }

  @java.lang.SuppressWarnings("all")
  public void setSocketTimeout(final int socketTimeout) {
    this.socketTimeout = socketTimeout;
  }

  @java.lang.SuppressWarnings("all")
  public void setCustomHeaders(final Map<String, String> customHeaders) {
    this.customHeaders = customHeaders;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  public boolean equals(final java.lang.Object o) {
    if (o == this) return true;
    if (!(o instanceof MPRequestOptions)) return false;
    final MPRequestOptions other = (MPRequestOptions) o;
    if (!other.canEqual((java.lang.Object) this)) return false;
    if (this.getConnectionTimeout() != other.getConnectionTimeout()) return false;
    if (this.getConnectionRequestTimeout() != other.getConnectionRequestTimeout()) return false;
    if (this.getSocketTimeout() != other.getSocketTimeout()) return false;
    final java.lang.Object this$accessToken = this.getAccessToken();
    final java.lang.Object other$accessToken = other.getAccessToken();
    if (this$accessToken == null ? other$accessToken != null : !this$accessToken.equals(other$accessToken)) return false;
    final java.lang.Object this$customHeaders = this.getCustomHeaders();
    final java.lang.Object other$customHeaders = other.getCustomHeaders();
    if (this$customHeaders == null ? other$customHeaders != null : !this$customHeaders.equals(other$customHeaders)) return false;
    return true;
  }

  @java.lang.SuppressWarnings("all")
  protected boolean canEqual(final java.lang.Object other) {
    return other instanceof MPRequestOptions;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  public int hashCode() {
    final int PRIME = 59;
    int result = 1;
    result = result * PRIME + this.getConnectionTimeout();
    result = result * PRIME + this.getConnectionRequestTimeout();
    result = result * PRIME + this.getSocketTimeout();
    final java.lang.Object $accessToken = this.getAccessToken();
    result = result * PRIME + ($accessToken == null ? 43 : $accessToken.hashCode());
    final java.lang.Object $customHeaders = this.getCustomHeaders();
    result = result * PRIME + ($customHeaders == null ? 43 : $customHeaders.hashCode());
    return result;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  public java.lang.String toString() {
    return "MPRequestOptions(accessToken=" + this.getAccessToken() + ", connectionTimeout=" + this.getConnectionTimeout() + ", connectionRequestTimeout=" + this.getConnectionRequestTimeout() + ", socketTimeout=" + this.getSocketTimeout() + ", customHeaders=" + this.getCustomHeaders() + ")";
  }
}
