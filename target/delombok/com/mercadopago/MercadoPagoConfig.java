// Generated by delombok at Fri Aug 26 19:04:59 CDT 2022
package com.mercadopago;

import com.mercadopago.net.MPDefaultHttpClient;
import com.mercadopago.net.MPHttpClient;
import java.util.Objects;
import java.util.logging.ConsoleHandler;
import java.util.logging.Level;
import java.util.logging.StreamHandler;
import org.apache.http.HttpHost;
import org.apache.http.client.HttpRequestRetryHandler;

/**
 * Mercado Pago configuration class.
 */
public class MercadoPagoConfig {
  @java.lang.SuppressWarnings("all")
  private static final java.lang.Object $LOCK = new java.lang.Object[0];
  public static final String CURRENT_VERSION = "2.0.1";
  public static final String PRODUCT_ID = "BC32A7VTRPP001U8NHJ0";
  public static final String TRACKING_ID = String.format("platform:%s,type:SDK%s,so;", MercadoPagoConfig.getJavaVersion(), MercadoPagoConfig.CURRENT_VERSION);
  public static final String BASE_URL = "https://api.mercadopago.com";
  private static final int DEFAULT_MAX_CONNECTIONS = 10;
  private static final int DEFAULT_CONNECTION_TIMEOUT_MS = 20000;
  private static final int DEFAULT_CONNECTION_REQUEST_TIMEOUT_MS = 20000;
  private static final int DEFAULT_SOCKET_TIMEOUT_MS = 20000;
  private static final String DEFAULT_METRICS_SCOPE = "prod";
  private static final Level DEFAULT_LOGGING_LEVEL = Level.OFF;
  private static volatile String accessToken;
  private static volatile String platformId;
  private static volatile String corporationId;
  private static volatile String integratorId;
  private static volatile StreamHandler loggingHandler;
  private static volatile String metricsScope = DEFAULT_METRICS_SCOPE;
  private static volatile Level loggingLevel = DEFAULT_LOGGING_LEVEL;
  private static volatile int maxConnections = DEFAULT_MAX_CONNECTIONS;
  private static volatile int connectionTimeout = DEFAULT_CONNECTION_TIMEOUT_MS;
  private static volatile int connectionRequestTimeout = DEFAULT_CONNECTION_REQUEST_TIMEOUT_MS;
  private static volatile int socketTimeout = DEFAULT_SOCKET_TIMEOUT_MS;
  private static volatile MPHttpClient httpClient;
  private static HttpHost proxy;
  private static HttpRequestRetryHandler retryHandler;

  /**
   * Verifies which http client use.
   *
   * @return MPHttpClient
   */
  public static synchronized MPHttpClient getHttpClient() {
    if (Objects.isNull(httpClient)) {
      httpClient = new MPDefaultHttpClient();
    }
    return httpClient;
  }

  /**
   * Method responsible for return Java version.
   *
   * @return java version
   */
  public static synchronized String getJavaVersion() {
    String version = System.getProperty("java.runtime.version");
    if (Objects.isNull(version)) {
      return null;
    }
    String major = version.replaceAll("^1\\.", "");
    int dotIndex = major.indexOf('.');
    if (dotIndex != -1) {
      major = major.substring(0, dotIndex);
    }
    return major + "|" + version;
  }

  /**
   * Method responsible for return StreamHandler.
   *
   * @return StreamHandler
   */
  public static StreamHandler getStreamHandler() {
    return Objects.nonNull(loggingHandler) ? loggingHandler : new ConsoleHandler();
  }

  @java.lang.SuppressWarnings("all")
  public static String getAccessToken() {
    return MercadoPagoConfig.accessToken;
  }

  @java.lang.SuppressWarnings("all")
  public static void setAccessToken(final String accessToken) {
    MercadoPagoConfig.accessToken = accessToken;
  }

  @java.lang.SuppressWarnings("all")
  public static String getPlatformId() {
    return MercadoPagoConfig.platformId;
  }

  @java.lang.SuppressWarnings("all")
  public static void setPlatformId(final String platformId) {
    MercadoPagoConfig.platformId = platformId;
  }

  @java.lang.SuppressWarnings("all")
  public static String getCorporationId() {
    return MercadoPagoConfig.corporationId;
  }

  @java.lang.SuppressWarnings("all")
  public static void setCorporationId(final String corporationId) {
    MercadoPagoConfig.corporationId = corporationId;
  }

  @java.lang.SuppressWarnings("all")
  public static String getIntegratorId() {
    return MercadoPagoConfig.integratorId;
  }

  @java.lang.SuppressWarnings("all")
  public static void setIntegratorId(final String integratorId) {
    MercadoPagoConfig.integratorId = integratorId;
  }

  @java.lang.SuppressWarnings("all")
  public static StreamHandler getLoggingHandler() {
    return MercadoPagoConfig.loggingHandler;
  }

  @java.lang.SuppressWarnings("all")
  public static void setLoggingHandler(final StreamHandler loggingHandler) {
    MercadoPagoConfig.loggingHandler = loggingHandler;
  }

  @java.lang.SuppressWarnings("all")
  public static String getMetricsScope() {
    return MercadoPagoConfig.metricsScope;
  }

  @java.lang.SuppressWarnings("all")
  public static void setMetricsScope(final String metricsScope) {
    MercadoPagoConfig.metricsScope = metricsScope;
  }

  @java.lang.SuppressWarnings("all")
  public static Level getLoggingLevel() {
    return MercadoPagoConfig.loggingLevel;
  }

  @java.lang.SuppressWarnings("all")
  public static void setLoggingLevel(final Level loggingLevel) {
    MercadoPagoConfig.loggingLevel = loggingLevel;
  }

  @java.lang.SuppressWarnings("all")
  public static int getMaxConnections() {
    return MercadoPagoConfig.maxConnections;
  }

  @java.lang.SuppressWarnings("all")
  public static void setMaxConnections(final int maxConnections) {
    MercadoPagoConfig.maxConnections = maxConnections;
  }

  @java.lang.SuppressWarnings("all")
  public static int getConnectionTimeout() {
    return MercadoPagoConfig.connectionTimeout;
  }

  @java.lang.SuppressWarnings("all")
  public static void setConnectionTimeout(final int connectionTimeout) {
    MercadoPagoConfig.connectionTimeout = connectionTimeout;
  }

  @java.lang.SuppressWarnings("all")
  public static int getConnectionRequestTimeout() {
    return MercadoPagoConfig.connectionRequestTimeout;
  }

  @java.lang.SuppressWarnings("all")
  public static void setConnectionRequestTimeout(final int connectionRequestTimeout) {
    MercadoPagoConfig.connectionRequestTimeout = connectionRequestTimeout;
  }

  @java.lang.SuppressWarnings("all")
  public static int getSocketTimeout() {
    return MercadoPagoConfig.socketTimeout;
  }

  @java.lang.SuppressWarnings("all")
  public static void setSocketTimeout(final int socketTimeout) {
    MercadoPagoConfig.socketTimeout = socketTimeout;
  }

  @java.lang.SuppressWarnings("all")
  public static void setHttpClient(final MPHttpClient httpClient) {
    MercadoPagoConfig.httpClient = httpClient;
  }

  @java.lang.SuppressWarnings("all")
  public static HttpHost getProxy() {
    synchronized (MercadoPagoConfig.$LOCK) {
      return MercadoPagoConfig.proxy;
    }
  }

  @java.lang.SuppressWarnings("all")
  public static void setProxy(final HttpHost proxy) {
    synchronized (MercadoPagoConfig.$LOCK) {
      MercadoPagoConfig.proxy = proxy;
    }
  }

  @java.lang.SuppressWarnings("all")
  public static HttpRequestRetryHandler getRetryHandler() {
    return MercadoPagoConfig.retryHandler;
  }

  @java.lang.SuppressWarnings("all")
  public static void setRetryHandler(final HttpRequestRetryHandler retryHandler) {
    MercadoPagoConfig.retryHandler = retryHandler;
  }
}
